#include "../../libs/data_structures/matrix/matrix.h"
#include "../../libs/algorithms/sort/sort.h"
#include "../../libs/algorithms/array/array.h"
#include <math.h>

/*
1. –î–∞–Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞, –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã. –ü–æ–º–µ–Ω—è—Ç—å –º–µ—Å—Ç–∞–º–∏
 —Å—Ç—Ä–æ–∫–∏, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –Ω–∞—Ö–æ–¥—è—Ç—Å—è –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã
*/
void task_1(matrix m);


/*
2. –£–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Å—Ç—Ä–æ–∫–∏ –º–∞—Ç—Ä–∏—Ü—ã –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é –Ω–∞–∏–±–æ–ª—å—à–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫
*/
void task_2(matrix m);


/*
3. –î–∞–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –£–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Å—Ç–æ–ª–±—Ü—ã –º–∞—Ç—Ä–∏—Ü—ã –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é
–º–∏–Ω–∏–º–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–æ–ª–±—Ü–æ–≤
*/
void task_3(matrix m);


/*
 4. –ï—Å–ª–∏ –¥–∞–Ω–Ω–∞—è –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞ ùê¥ —Å–∏–º–º–µ—Ç—Ä–∏—á–Ω–∞, —Ç–æ –∑–∞–º–µ–Ω–∏—Ç—å ùê¥ –µ–µ –∫–≤–∞–¥—Ä–∞—Ç–æ–º (ùê¥^2)
 */
void task_4(matrix m);


/*
 5. –î–∞–Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ï—Å–ª–∏ —Å—Ä–µ–¥–∏ —Å—É–º–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç—Ä–æ–∫ –º–∞—Ç—Ä–∏—Ü—ã –Ω–µ—Ç —Ä–∞–≤–Ω—ã—Ö,
 —Ç–æ —Ç—Ä–∞–Ω—Å–ø–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –º–∞—Ç—Ä–∏—Ü—É
 */
void task_5(matrix m);


/*
 6. –î–∞–Ω—ã –¥–≤–µ –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–µ –º–∞—Ç—Ä–∏—Ü—ã ùê¥ –∏ ùêµ. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å, —è–≤–ª—è—é—Ç—Å—è –ª–∏ –æ–Ω–∏ –≤–∑–∞–∏–º–Ω–æ
–æ–±—Ä–∞—Ç–Ω—ã–º–∏ (ùê¥ = ùêµ^(‚àí1))
 */
int task_6(matrix m1, matrix m2);


/*
 7. –î–∞–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ù–∞–∑–æ–≤–µ–º –ø—Å–µ–≤–¥–æ–¥–∏–∞–≥–æ–Ω–∞–ª—å—é –º–Ω–æ–∂–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —ç—Ç–æ–π –º–∞—Ç—Ä–∏—Ü—ã, –ª–µ–∂–∞—â–∏—Ö –Ω–∞ –ø—Ä—è–º–æ–π,
 –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–π –ø—Ä—è–º–æ–π, —Å–æ–¥–µ—Ä–∂–∞—â–µ–π —ç–ª–µ–º–µ–Ω—Ç—ã ùëéùëñ,ùëñ. –ù–∞–π—Ç–∏ —Å—É–º–º—É –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤—Å–µ—Ö –ø—Å–µ–≤–¥–æ–¥–∏–∞–≥–æ–Ω–∞–ª–µ–π
 –¥–∞–Ω–Ω–æ–π –º–∞—Ç—Ä–∏—Ü—ã
 */
void task_7(matrix m);


/*
 8. –î–∞–Ω–∞ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞, –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –∫–æ—Ç–æ—Ä–æ–π —Ä–∞–∑–ª–∏—á–Ω—ã. –ù–∞–π—Ç–∏ –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã –≤ –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏
 */
int task_8(matrix m);


/*
 9. –î–∞–Ω–æ ùëõ —Ç–æ—á–µ–∫ –≤ ùëö-–º–µ—Ä–Ω–æ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–µ. –£–ø–æ—Ä—è–¥–æ—á–∏—Ç—å —Ç–æ—á–∫–∏ –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é –∏—Ö —Ä–∞—Å—Å—Ç–æ—è–Ω–∏–π –¥–æ –Ω–∞—á–∞–ª–∞ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
 */
void task_9(matrix m);


/*
 10. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–ª–∞—Å—Å–æ–≤ —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã—Ö —Å—Ç—Ä–æ–∫ –¥–∞–Ω–Ω–æ–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–π
–º–∞—Ç—Ä–∏—Ü—ã. –°—Ç—Ä–æ–∫–∏ —Å—á–∏—Ç–∞—Ç—å —ç–∫–≤–∏–≤–∞–ª–µ–Ω—Ç–Ω—ã–º–∏, –µ—Å–ª–∏ —Ä–∞–≤–Ω—ã —Å—É–º–º—ã –∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
int task_10(matrix m);


/*
 11. –î–∞–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å ùëò ‚Äì –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ "–æ—Å–æ–±—ã—Ö" —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã, —Å—á–∏—Ç–∞—è
—ç–ª–µ–º–µ–Ω—Ç "–æ—Å–æ–±—ã–º" , –µ—Å–ª–∏ –æ–Ω –±–æ–ª—å—à–µ —Å—É–º–º—ã –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å–≤–æ–µ–≥–æ —Å—Ç–æ–ª–±—Ü–∞
 */
int task_11(matrix m);


/*
 12. –î–∞–Ω–∞ –∫–≤–∞–¥—Ä–∞—Ç–Ω–∞—è –º–∞—Ç—Ä–∏—Ü–∞. –ó–∞–º–µ–Ω–∏—Ç—å –ø—Ä–µ–¥–ø–æ—Å–ª–µ–¥–Ω—é—é —Å—Ç—Ä–æ–∫—É –º–∞—Ç—Ä–∏—Ü—ã –ø–µ—Ä–≤—ã–º
–∏–∑ —Å—Ç–æ–ª–±—Ü–æ–≤, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Ç—Ä–∏—Ü—ã.
 */
void task_12(matrix m);


/*
 13. –î–∞–Ω –º–∞—Å—Å–∏–≤ –º–∞—Ç—Ä–∏—Ü –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞. –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–∏—Å–ª–æ –º–∞—Ç—Ä–∏—Ü, —Å—Ç—Ä–æ–∫–∏
 –∫–æ—Ç–æ—Ä—ã—Ö —É–ø–æ—Ä—è–¥–æ—á–µ–Ω—ã –ø–æ –Ω–µ—É–±—ã–≤–∞–Ω–∏—é —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
int task_13(matrix *m, int nMatrices);


/*
 14. –î–∞–Ω –º–∞—Å—Å–∏–≤ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü. –í—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—ã, –∏–º–µ—é—â–∏–µ –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –Ω—É–ª–µ–≤—ã—Ö —Å—Ç—Ä–æ–∫
 */
void task_14(matrix *m, int nMatrices);


/*
 15. –î–∞–Ω –º–∞—Å—Å–∏–≤ —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω—ã—Ö –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã—Ö –º–∞—Ç—Ä–∏—Ü. –í—ã–≤–µ—Å—Ç–∏ –º–∞—Ç—Ä–∏—Ü—ã —Å –Ω–∞–∏–º–µ–Ω—å—à–µ–π –Ω–æ—Ä–º–æ–π.
 –í –∫–∞—á–µ—Å—Ç–≤–µ –Ω–æ—Ä–º—ã –º–∞—Ç—Ä–∏—Ü—ã –≤–∑—è—Ç—å –º–∞–∫—Å–∏–º—É–º –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö –≤–µ–ª–∏—á–∏–Ω –µ–µ —ç–ª–µ–º–µ–Ω—Ç–æ–≤
 */
void task_15(matrix *m, int nMatrices);