#include <stdio.h>
#include <malloc.h>
#include <memory.h>

//Меняет местами значения по адресу а и b
void swap(int *a, int *b);

//Выполняется поиск позиции minPos – позиции минимального элемента среди
//элементов в неотсортированной части (начиная с индекса i, заканчивая n - 1).
//Элементы на позиции i и minPos обмениваются.
void selectionSort(int *a, const int size);

//Запоминаем элемент, подлежащий вставке.
//Перебираем справа налево отсортированные элементы и сдвигаем каждый элемент вправо
//на одну позицию, пока не освободится место для вставляемого элемента.
//Вставляем элемент на освободившееся место.
void insertionSort(int *a, const size_t size);

//Два элемента, нарушающие требуемый порядок, меняются местами
void bubbleSort(int *a, size_t size);

//Первоначально брать достаточно большое расстояние между сравниваемыми элементами и по мере упорядочивания массива
//сужать это расстояние вплоть до минимального
void combsort(int *a, const size_t size);

//Сортировка подсчётом
void countSort(int *a, const size_t size);

//Сортировка слиянием
void mergeSort(int *a, int n);